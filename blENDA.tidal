
--- ckqsx - blenda
-- {{netlabel}}

bps 0.97


d5 $ juxcut rev $ palindrome $ (sound $ samples "arp" $ iter 4 $ run 4)
 |+| speed (((*0.9) <$>) $ every 6 ((*1.3) <$>) $ every 8 ((*1.5) <$>) $ every 9 ((*1.8) <$>) $ every 7 ((*1.2) <$>) $ "0.2")
 |+| gain (((*(-1)) . (*1.5)) <$> sinewave1)

d4 $ (slow 2 $ every 4 (brak) $ palindrome $ density 8 $ (sound $ samples "arp" $ iter 4 $ run 4)
 |+| speed (((*1.6) <$>) $ every 6 ((*1.3) <$>) $ every 8 ((*1.5) <$>) $ every 9 ((*1.8) <$>) $ every 7 ((*1.2) <$>) $ iter 2 "0.95 0.89 0.99")
 |+| slow 32 (vowel "u i")
 |+| gain (((*(-1)) . (*1)) <$> sinewave1))


d3 $ echo (7/4) $ every 4 (density 4 . degradeBy 0.3) $ density 2 $ stack[(sound $ samples "{glitch}?" $ iter 4 "5 6 7 8 9")]
 |+| shape (((*0.9) <$>) $ every 4 ((*2) <$>) "0.3")
 |+| gain sinewave1

d3 $ echo (7/4) $ every 4 (density 4 . degradeBy 0.3) $ density 2 $ stack[(sound $ samples "{glitch}?" $ iter 4 "5 6 7 8 9"), striate 2 $ sound "mattel:5/2"]
 |+| shape (((*0.9) <$>) $ every 4 ((*2) <$>) "0.3")
 |+| gain sinewave1

d3 silence

d2 $ every 8 (echo (7/4)) $ every 9 (slow 8) $ every 4 (stut 8 0.1 (-0.5)) $ (echo (3/4) $ every 4 (rev) $ every 9 (density 2) $ iter 4 . density 8 $ degradeBy 0.25 $ stack[(slow 2 $ sound $ samples "{mattel}?" $ iter 10 $ run 10)]
 |+| speed (((*1) <$>) $ every 2 ((*0.8) <$>) "0.8"))
 |+| end "0.25"

 |+| end rand

d2 silence

d1 $ every 15 (stut 8 0.1 (-0.5)) $ every 8 (density 2) $ striate 2 $ stack[sound "sn:2 sn", spread' slow "2 3 1" $ striate 2 $ sound "bd:1 ~ bd:2"]
 |+| speed "0.5"

 |+| gain "0.0"

d1 silence

 |+| shape "0.1"

d1 silence
hush



d1 $ every 15 (stut 8 0.1 (-0.5)) $ density 2 $ striate 2 $ stack[sound "sn:2 sn", spread' slow "2 3 1" $ striate 2 $ sound "bd:1 ~ bd:2"]
 |+| speed "0.5"

bps 0.97

let start = now

d1 $ start ~> (every 15 (stut 8 0.1 (-0.5)) $ every 8 (density 2) $ striate 2 $ retrig $ seqP[(0, 32, sound "sn:2 sn"), (0, 32, sound "bd bd bd bd"),  (0, 32, spread' slow "2 3 1" $ striate 2 $ sound "bd:1 ~ bd:2")])
 |+| speed "0.5"
