cps 1

cps 0.8

b $ every 7 (within (0, 0.5) (slow 2 . stut 2 0 0.75)) . every 3 (revArc(0, 0.5)) $ stack[
  stack[
     slowcat[
        drum "[lt([3 5]/2,8), [ag(3,8,2)]]",
        drum "[lt([3 5]/2,8), [ag(3,8)]]",
        drum "[lt(3,8), ag(5,8)]",
        drum "[lt([3 5]/2,8), [ag(3,8)]/3]"
        ],
     every 4 (chop 2) $ drum "~ [cr oh/2]",
     slowcat[drum "ch*8", stack[drum "ch*2 ~", drum "[~ ch] !"]]
  ],
  drum "[cp([5 3 5]/3,8)]"
] # dt "0.05" # sag "1" # scr "0.6"

q $ every 5 (# decay (scale 0.5 1 $ palindrome $ sine1)) $ every 13 (within(0, 0.1)((#cutoffegint "1"))) $ every 4 (within(0, 0.1)((#cutoffegint "0.666"))) $ stut 2 0 0.75 $ slowcat[
  chrot [30, 25] "1(2,2) !" [0, 3, 0, 3]
] # decay "[0.5 0.5 0.5 1 1 0.5 1]/6"  # cutoffegint "0.5" # lforate "0.6" # lfoint "0"




hush

----

cps 0.8

b $ every 7 (within (0, 0.5) (slow 2 . stut 2 0 0.75)) . every 3 (revArc(0, 0.5)) $ stack[
  drum "[bd([5 3]/2,8), [sn(3,8,2)]]",
--  drum "[[ch([7 8 5]/3,8)]/2, [cr [oh !?]]]",
  drum "[[ch(8,8)]/2, [cr [oh !?]]]",
  drum "cp([1 4]/2,8)"
  ,drum "[cp(9,16)]/2"
] # scr "0.6" # dch "0.25"

q $ every 13 (within(0, 0.1)((#cutoffegint "1"))) $ every 4 (within(0, 0.1)((#cutoffegint "0.666"))) $ stut 2 0 0.75 $ slowcat[
  chrot [30, 25] "[1(5,8)]/2 !" [0, 3, 0, 5, 0, 7]
  --,chrot [32] "1([2 4]/2, 4) !" [0, 3, 0, 5, 0, 7]
] # decay "1" # cutoffegint "0.5" # lforate "0.6" # lfoint "0"

hush

hush
---

cps 1


q $ superimpose (#pitch1 (scale 0.1 0.8 $ slow 8 $ sine1)) $ density 1.2 $ slowcat[
  chrot [44] "1([5 8]/2,8)" [0],
  chrot [48] "1([8 5]/2,8)" [0],
  chrot [44] "1([5 8]/2,8)" [0],
  chrot [48] "1([8 5]/2,8)" [0],
  chrot [44] "1([5 8]/2,8)" [0],
  chrot [42] "1([5 8]/2,8)" [0],
  chrot [40] "1([5 8]/2,8)" [0]
] # pitch1 "[0.1 0.2 0.4 0.6 0.8]/5"  # pitch2 "0.4"  # pitch3 "0.8"

--


import Data.Maybe

let noteLookup s = elemIndex s $ take 128 [(n ++ show o) | o <- [0 .. 10], n <- ["c","cs","d","ds","e","f","fs","g","gs","a","as","b"]]
let toMIDI p = fromJust <$> (filterValues (isJust) (noteLookup <$> p))

let lookup s = elemIndex s $ take 128 [(n ++ show o) | o <- [0 .. 10], n <- ["c","cs","d","ds","e","f","fs","g","gs","a","as","b"]]




b $ density 1.2 $ stack[
slowcat[
drum "bd([2 1 4]/3,2) [cp ~ [~ cp/2]]",
drum "bd([2 1 4]/3,2) [cp cp/2]"],
density 2 $ drum "ch*2 oh",
drum "[~ ch*2] !"
] # scp "0.5"


q $ density 2 $ chrot [48] "[1(3,5), 1(3,5,1)]" [4,7,11,7,11,0] # dur "0.05" # vel "0.5" # lforate "0.75" # lfoint "0.1"

q $ density 1.2 $ slowcat[
  note "[70 40 38 48]",
  note "[38 42 42 60]"
] # dur "0.05" # vel "0.5" # lforate "0.75" # lfoint "0.1"


q $ density 1.2 $ stack[
  chrot [(toMIDI "c4")] "[1(8,8)]" [0,4,7],
  chrot [60] "[1(5,8)]" [0,4,7]
  ] # dur "0.05" # vel "0.25" # lforate "0.75" # lfoint "0.1"

q $ slow 4 . stut 2 0 0.75 $ slowcat[
    note "[70 77 70 75] ! ! !"
    ,
    note "[72 77 80 76] ! ! !"
    ] # decay "0.5"




q $ density 1.2 $ stack[
  chrot [48] "[1(3,8), 1(3,8)]" [0,0,0,4,7,11]
] # decay "1" # lforate "0.85" # lfoint "0.1"


q $ stut 2 0 0.75 $ stack[
note "30([5 1 1 1 3]/5,8,0)",
note "48(1,4,1)",
note "56([2 1]/2,4,2)"

# decay "1" # pitch1 "[0.1 0.2 0.4 0.6 0.8]/5"  # dur "0.05"

hush
