cps 1

-- d1 $ slow 1.25 $ juxBy 0 (rev . (|+| coarse "7")) $ stack[
-- gap 2 . stut 2 0.25 0.5 $ (sound $ samples "future ! !?" (iter 2 "2 3 4 2 0"))
-- ,
-- stut 2 0.5 0.5 . chop 2 $ sound "~ [gabba:1 visco:5] [dr:0 house:3]"
-- ]
-- |+| resonance "[0.7 0.25 0.5 1.0]/4"
-- |+| cutoff "[0.37 0.05 0.15 0.08]/4"
-- |+| bandq "[0.8 0.1 0.25]/3"
-- |+| bandf "[0.05 0.15 0.666]/3"
-- |+| speed (scale 1.25 1.75 $ sine1)

d2 $ fadeOut 4 $ juxBy 0 (|+| vowel "a") $ every 3 (stut 3 0.25 0.5) $ slow 1.25 $ gap 2 $ (sound $ samples "hh27" $ (iter 2 "0 2"))
|+| resonance "0.23"
|+| cutoff "[0.37 0.05 0.15 0.08]/4"
|+| bandq "0.05"
|+| bandf "0.5"
|+| speed (scale 1.25 1.75 $ sine1)
|+| coarse "23"


d1 $ slow 1.5 $ juxBy 0 (rev . (|+| coarse "7")) $ stack[
gap 2 . stut 2 0.25 0.5 $ (sound $ samples "future:4 !? future:3" (iter 2 "2 3 4 2 0"))
,
stut 2 0.5 0.5 . chop 2 $ sound "~ [am:6 house] [dr:0 house:3]"
]
|+| resonance "[0.7 0.25 0.5 1.0]/4"
|+| cutoff "[0.37 0.05 0.15 0.08]/4"
|+| bandq "[0.8 0.1 0.25]/3"
|+| bandf "[0.05 0.15 0.666]/3"
|+| speed (scale 1.25 1.75 $ sine1)


hush


----


let ddd d = (|+| delay d) . (|+| delayfeedback d) . (|+| delaytime d)

-- d1 $ foldEvery [3,4,7] ((|+| speed (every 12 ((0.1-) <$>) $ "1")) . chop 2 . rev) $ ddd "0.12" . every 4 rev . slow 2 $ juxBy 0 (rev . (|+| coarse "7")) $ stack[
-- gap 2 . stut 2 0.25 0.5 $ (sound $ samples "future:4 visco future:3" (iter 2 "2 3 4 2 0"))
-- ,
-- stut 2 0.5 0.5 . chop 2 $ sound "~ [am:6 house] [dr:0 house:3]"
-- ]
-- |+| resonance "[0.7 0.25 0.5 1.0]/4"
-- |+| cutoff "[0.37 0.05 0.15 0.08]/4"
-- |+| bandq "[0.8 0.1 0.25]/3"
-- |+| bandf "[0.05 0.15 0.666]/3"


d1 $ ddd "0.12" . every 4 rev . slow 2 $ juxBy 0 (rev . (|+| coarse "7")) $ stack[
gap 2 . stut 2 0.25 0.5 $ (sound $ samples "future:4 visco future:3" (iter 2 "2 3 4 2 0"))
,
stut 2 0.5 0.5 . chop 2 $ sound "~ [am:6 house] [dr:0 house:3]"
]
|+| resonance "[0.7 0.25 0.5 1.0]/4"
|+| cutoff "[0.37 0.05 0.15 0.08]/4"
|+| bandq "[0.8 0.1 0.25]/3"
|+| bandf "[0.05 0.15 0.666]/3"


|+| speed (scale 1.75 2 $ sine1)

----

d1 $ slow 2 $ juxBy 0 (rev . (|+| coarse "7")) $ stack[
every 4 (gap 2) . every 8 (chop 2) . gap 2 . stut 2 0.25 0.5 $ (sound $ samples "visco:5 !" (iter 2 "2 3 4 2 0"))
]
|+| resonance "[0.7 0.25 0.5 1.0]/4"
|+| cutoff "[0.37 0.05 0.15 0.08]/4"
|+| bandq "[0.8 0.1 0.25]/3"
|+| bandf "[0.05 0.15 0.666]/3"
|+| speed "0.25"

d2 $ every 4 (within (0, 0.15) ((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2))) $ juxBy 0 (rev . (|+| coarse "7")) $ stack[
stut 2 0.5 0.5 . chop 2 $ sound "~ [~ house:3]"
]
|+| resonance "[0.7 0.25 0.5 1.0]/4"
|+| cutoff "0.08"
|+| bandq "[0.8 0.1 0.25]/3"
|+| speed "0.65"

d3 $ every 4 (within (0, 0.15) ((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2))) $ juxBy 0 (rev . (|+| coarse "7")) $ slowcat[
sound "cp",
sound "hands"
]
|+| speed "0.65"

d4 $ juxBy 0 (within (0, 0.25) ((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2)) . (|+| coarse "7")) $ sound "sid:2 !"

runnow d4 $ slow 2 . gap 2 . juxBy 0 (((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2)) . (|+| coarse "7")) $ sound "sid:2 !"
|+| vowel "[a o e i u o]/10"

hush


let runnow d p = do now <- getNow
                    d $ now ~> p


runnow d4 $ slow 2 . gap 2 . juxBy 0 (((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2)) . (|+| coarse "7")) $ sound "sid:2 !"
|+| vowel "[a o e i u o]/10"

d3 $ zoom (0, 0.75) . gap 2 . juxBy 0 (((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2)) . (|+| coarse "7")) $ sound "sid:2 !"
|+| vowel "[a o e i u o]/10"

runnow d4 $ gap 2 . juxBy 0 (((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2)) . (|+| coarse "7")) $ sound "sid:2 !"
|+| vowel "[a o e i u o]/10"


d1 $ (|+| cutoff "[0.001 0.002 0.005 0.007 0.1 0.2 0.3 0.1]/8 $ slow 2 . sine1") . (|+| resonance "0.3") . (density 4) $ sound "[sid:2 house:3]*2" |+|
cutoff "0.1" |+| resonance "0.2"

d1 $ (|+| cutoff "[0.001 0.002 0.005 0.007 0.1 0.2 0.3 0.1]/8") . (|+| resonance "0.3") . (density 4) $ sound "[house sn:4]*2" |+| cutoff "0.1" |+|
resonance "0.2"

let a = "bd ~ sn:2 bd hh sn:2 ~ ~"
    b1 = "bd sn:2 ~ dr ~ sn:2 ~ sn:4"
    b2 = "bd sn:2 ~ dr:2 ~ sn:2 ~ sn:1"
in d1 $ (sound $ slowcat [a, b1, a, b2]) |+| crush "[-8 -7 -6 -7]/4" |+| coarse "[2 4 2 5]/8"

cps 0.5
d1 $ sound "breaks125*4" |+| unit "c" |+| cut "-1" |+| begin "-1" |+| coarse (slow 2 $ "1 2 4 8 16 32 64 128")

cps 1

d1 $ sound "[rave*32 breaks125*32]" |+| speed "0.5" |+| unit "c" |+| cut "1" |+| begin "-1" |+| end (slow 2 $ scale 4.01 4.2 sine1)

runnow d1 $ 2 <~ seqP [(0,4,sound "arpy(3,8)"),(2,6,sound "arpy:2(5,8)")]
|+| speed "0.25"



runnow d1 $ 2 <~ seqP [(0,4,sound "arpy(3,8)"),(2,6,sound "arpy:2(5,8)")]
|+| speed "0.25"

let a = [True, True, False, True]
let b = ["bd", "sn"]

let realignCount a b = (lcm m (length b)) `quot` m where m = sum $ map fromEnum a


d3 $ zoom (0, 0.75) . gap 2 . juxBy 0 (((|+| speed "0.23") . (|+| crush "4") . (slow 2 . gap 2)) . (|+| coarse "7")) $ sound "sid:2 !"
|+| vowel "[a o e i u o]/10"

d1 $ density 2 $ sound "bd cp"

d1 $ retrig $ sound "td:9*4 td:14*4 td:9*8" |+| (rev $ gain envL)

let zoom' sz start = zoom (start, start+sz) in
  d1 $ spread' (zoom' (1/7)) (toRational . (*(47/91)) <$> (slow 4
sine1)) (striate 41 $ sound "bev") --interesting sample breaks loop


let zoom' sz start = zoom (start, start+sz) in
  d1 $ spread' (zoom' (1/8)) (toRational . (*(133/967)) <$> (slow 6
sine1)) (striate' 100 (1/96) $ sound "bev") --and exhale


let zoom' sz start = zoom (start, start+sz) in
  d1 $ spread' (zoom' (1/12)) (toRational . (*(1/16)) <$> (slow 32
sine1)) (striate' 100 (1/25) $ sound "bev") --you light up n latter...

hush

cps 1.5

d1 $ sound "breaks125/2" |+| matchcps (pure $ 1.5/2)

d2 $ sound "breaks165/2" |+| matchcps (pure $ 1.5/2)


-----


let zoom' sz start = zoom (start, start+sz)
    index sz indexpat pat = spread' (zoom' $ toRational sz) (toRational . (*(1-sz)) <$> indexpat) pat

d1 $ index (1/8) (slow 4 sine1) (chop 32 $ sound "sax sax:2 sax:3 sax:4")


cps 0.666

cps 1

d3 $ index (8/8) (slow 2 squarewave1) (every 2 rev  . juxBy 0 ((|+| coarse "2") . stut 2 0.25 0.5) $ slowcat[
sound "[am*2, am:3(5,8)]/2 am:2"
,
sound "[am*2, am:3(5,8)]/2 am:2*2"
,
sound "[am*2, am:3(5,8)] am:2"
,
sound "[am*2, am:3(5,8)]/2 am:2*4"
,
sound "[am*2, am:3(5,8)]/2 !"
])

d2 $ index (8/8) (slow 4 squarewave1) (every 4 (slow 2) . palindrome . density 3 . juxBy 0 (slowspread striate [2..4]) $ stack[
sound "hardcore! !! !! !!"
,
sound "[house, dr ! ! !]"
,
sound "house:3 ! !!?"
]
|+| speed (every 4 ((0.1-) <$>) $ ((*2.5)<$>) $ "[0.25 0.15 0.25 0.3 0.27]/5")
|+| coarse (((floor <$> (*23))<$>) $ "[0.25 0.15 0.25 0.3 0.27]/5")
)

d1 $ index (2/8) (slow 0.25 sine1) (juxBy 0 (|+| speed "1.2") . stut 2 0.25 0.5 $ sound $ samples "numbers(2,8)" $ slow 0.5 . iter 10 $ run 10)
|+| coarse "[11 12 14 8 7 6 18]/7"
|+| vowel "[o a e a o]/5"

d4 $ index (2/8) (slow 0.25 sine1) (juxBy 0 (|+| speed "1.2") . chop 2 . stut 4 0.25 0.5 . within (0.5, 0.85) (chop 8) . chop 4 $ sound $ samples "moog(3,8)" $ slow 0.25 $ run 4)
|+| cut "1"
|+| speed (((*2.5)<$>) $ "[0.25 0.15 0.25 0.3 0.27]/5")
|+| coarse "[11 12 14 8 7 6 18]/7"
|+| vowel "[o a e a o]/5"


hush

-----



let zoom' sz start = zoom (start, start+sz) in
  d1 $ spread' (zoom' (1/8)) (toRational . (*(133/967)) <$> (slow 6 sine1)) (striate' 100 (1/96) $ sound "bev") --and exhale

let zoom' sz start = zoom (start, start+sz) in
  d1 $ spread' (zoom' (1/12)) (toRational . (*(1/16)) <$> (slow 32 sine1)) (striate' 100 (1/25) $ sound "bev") --you light up n latter...



-----

cps 0.666

let zoom' sz start = zoom (start, start+sz) in
  d1 $ spread' (zoom' (2/7)) (toRational . (*(47/91)) <$> (slow 32 sine1)) (slow 8 . every 4 (juxcut rev) . slowspread striate [41, 100, 23] $ sound "bev" |+| speed (scale 0.9 1.2 $ sine1) |+| gain "1.2")


let zoom' sz start = zoom (start, start+sz) in d1 $ spread' (zoom' (4/7)) (toRational . (*(47/91)) <$> (slow 2 sine1)) (density 2 . juxcut rev $ sound "kos:7" |+| cut "1" |+| speed (((*2) <$>) $ "[0.25 0.15 0.25 0.3 0.27]/5") |+| gain "1.2" |+| vowel "[a o e a]/4")


d1 $ striate 8 . slow 4 . juxcut rev $ sound "kos:7"
|+| cut "1"

|+| speed (((*2) <$>) $ "[0.25 0.15 0.25 0.3 0.27]/5")
|+| vowel "[a o u e a]/4"

|+| resonance "0.23"
|+| cutoff "[0.37 0.05 0.15 0.08]/4"
|+| bandq "0.05"
|+| bandf "0.5"

d2 $ every 13 (striate 2) . foldEvery [3, 7] (|+| coarse "[11 12 14 8 7 6 18]/7") . every 4 (striate' 2 (0.666) . slow 2) $ stack[
index (2/8) (slow 0.25 squarewave1) (ddd "0.15" $ sound "am:3(5,8) [~ sn:4*2]")
,
sound "[am*2, rapman*2]/2 am:2"
,
sound "~ ~ ~ cp"
,
stut 2 0.25 0.5 . chop 4 $ sound "hardcore ! !"
|+| end "[0.2 0.25 0.2 0.15]/4"
]
|+| shape "0.5"

d3 $ gap 2 . stut 2 0.25 0.5 . within (0.5, 0.85) (chop 2) $ (sound $ samples "jvbass(3,8)" $ run 4)
|+| speed (((*2) <$>) $ "[0.25 0.15 0.25 0.3 0.27]/5")
|+| coarse "[11 12 14 8 7 6 18]/7"

d4 silence

d4 $ slow 1.25 . stut 4 0.25 0.5 . within (0.5, 0.85) (chop 8) . chop 2 $ (sound $ samples "arpy(3,8)" $ slow 0.25 $ run 4)
|+| speed "[0.25 0.15 0.25 0.3 0.27]/5"
|+| coarse "[11 12 14 8 7 6 18]/7"
|+| vowel "[a o e a]/4"
|+| gain "0.666"

hush

----








cps 1

d2 $ index (8/8) (slow 4 squarewave1) (slow 1.25 . juxBy 0 (slowspread striate [2..4]) $ stack[
sound "hardcore! !! !! !!"
,
sound "sid:7 ~ [sid:2 sid:8] sid:7"
]
|+| coarse (((floor <$> (*23))<$>) $ "[0.25 0.15 0.25 0.3 0.27]/5")
)

d3 $ every 5 (chop 4 . within (0, 0.15) (|+| shape "0.666") . within (0, 0.25) (density 2)) . slow 2 . slow 1.25 . stut 2 0.25 0.5 $ (sound $ samples "rhodes(5,8)" $ slow 0.25 "0 2 3 4")

d4 $ slow 2 . slow 1.25 . stut 4 0.25 0.5 . within (0.5, 0.85) (chop 8) . chop 2 $ (sound $ samples "arpy(3,8)" $ slow 0.25 $ run 4)
|+| speed "[0.25 0.15 0.25 0.3 0.27]/5"
|+| coarse "[11 12 14 8 7 6 18]/7"
|+| vowel "[a e a]/3"
|+| gain "0.666"


hush
