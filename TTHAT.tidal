cps 1

cps 0.3

d1 $ fadeOut 4 $ echo (7/4) . every 4 (echo (1/4)) . stut 2 0.5 (-0.1) . chop 2 . every 2 (density 2) . density 8 $ (sound (samples "amencutup ~" (iter 8 $ run 8)))

hush

d1 $ every 2 (within (0, 0.2) (chop 2) . chop 2) $ slow 8 . chop 32 $ sound "amenfixed"
 |+| cut "1"
 |+| speed "1"
 |+| crush "4"
 |+| speed (((0.1-) <$>) "1")

d1 $ stut 8 0.5 0.5 . every 5 (within (0, 0.1) (chop 2) . within (0,0.2)(|+| speed "0.23")) . every 4 (echo (1/4)) . stut 2 0.5 (-0.1) . every 2 (within (0, 0.2) (rev)) . chop 8 . density 8 $ (sound (samples "amencutup ~" (iter 8 $ run 8)))
 |+| speed (every 1 ((*0.5) <$>) $ "1")
 |+| crush (density 16 "6 4 8 16")
 |+| vowel (iter 4 "p o i o")

d1 $ juxcut rev . every 4 (within (0, 0.25) (smash 2 [1..2])) . slow 2 . chop 8 $ sound "amen"
 |+| cut "1"
 |+| speed "1"
 |+| crush "4"


d1 $ stack[
every 5 (|+| gain "0") $ juxcut rev . every 4 (within (0, 0.25) (smash 2 [1..2])) . slow 8 . chop 16 $ sound "amen"
 |+| cut "1"
 |+| speed "1"
 |+| crush "4"
 |+| gain "1",
every 5 (|+| gain "1") $ every 4 (echo (1/4)) . stut 2 0.5 (-0.1) . every 2 (within (0, 0.2) (rev)) . chop 8 . density 8 $ (sound (samples "amencutup ~" (iter 8 $ run 8)))  |+| gain "0" |+| speed "2"
]
 |+| crush "6"

cps 0.666

d1 $ echo (1/4) $ spread' slow "2 3" . within (0, 0.2) ((|+| vowel (density 2 "a c a c i a")) . chop 2) . juxcut rev . every 1 ((|+| crush "2") . chop 8  . slow 2 . revArc(0,0.25)) . slow 2 . chop 8 $ sound "amen"
 |+| cut "1"
 |+| speed (every 2 ((*0.5) <$>) $ iter 4 "2 1.5 1 1.666")


d1 $ echo (7/4) $ every 4 (chop 8  . slow 4 . revArc(0,0.25)) . slow 2 . chop 8 $ sound "amen"
 |+| cut "1"


d1 $ echo (7/4) $ every 2 (rev) . spread' slow "4 2 2" . spread' chop "32 16 64" $ sound "amen"
 |+| cut "1"



d4 $ stut 4 0.9 (-0.1) . spread' chop "4 8 2" $ sound "ade:3"
 |+| cut "1"
 |+| speed (((*0.5) <$>) $ iter 4 "2 1.5 1 1.666")



d1 $ density 1.5 . smash 2 [1..4] . echo (1/4) . density 2 $ (sound (samples "amenkit*2 ~" (iter 80 $ run 80)))
 |+| speed (every 2 ((*1) <$>) $ iter 4 "2 1.5 1 1.666")

d2 $ smash 4 [1..4] . juxcut rev . slow 32 . chop 16 $ sound "bev"
 |+| cut "1"
 |+| speed (((0.1-) <$>) "1.2")


hush




d1 $ smash 2 [1..4] . echo (1/4) . density 2 $ (sound (samples "amenkit ~" (iter 80 $ run 80)))
 |+| speed (every 2 ((*1) <$>) $ iter 4 "2 1.5 1 1.666")
