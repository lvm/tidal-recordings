-- Examples from http://twitter.com/tidalcycles/

# 0
 
d1 $ brak $ let x = "bd [sn [[sn bd] sn]]*1/3" in interlace (sound $ slow 3 $ x) (sound $ every 3 (append "[bd]*6") x) 
  |+| speed "4"

# 1

d1 $ weave 4 (speed $ (1+) <$> sinewave1) [density 4 $ every 5 ((0.25 <~) . rev) $ striate 16 $ sound"[bd sn/2]/2", sound "bd [~ hc]*3"]
  |+| speed "3"

# 2

d1 $ (echo (1/32) $ whenmod 8 6 (rev) $ density 4 $ striate 4 $ sound $ samples "[bd [sn]*3]*1/4" (slow 13 $ run 12))
  |+| speed "2"

# 3

d1 $ whenmod 4 2 rev $ spread' (striate) "[8 3 4, 5]" $ sound "[[nn/6 nn/4, [nn/5 nn/2 nn/3]*1/2]*1/3, kurt/1]"

# 4

d1 $ sound (samples "bd*3 [bd sn]*1/3 [bd*12 bd*6]/3 cp" "[0 2 4]/3") |+| end (slow 5 $ sinewave1) |+| speed ((+1) <$> triwave1)

# 5

d1 $ slow 2 $ stack [spin 6 $ spread' (slow) "3 4 5 2" $ sound "[bd*5 ht*5, [sid/4]*3 lt*2/5 mt*3, [sid/3]*3]"] |+| speed "2"

# 6

d1 $ every 2 rev $ spread' (striate' 6) (((+0.1) . (*0.2)) <$> slow 32 sinewave1) $ sound "[diphone2/6 diphone2]/4" 

# 6.1

d1 $ density 16 $ spread' (striate' 32) (((+0.04) . (*0.08)) <$> slow 128 sinewave1) $ sound (samples "amencutup" (slow 12 $ run 16))

# 6.2

d1 $ density 2 $ jux (rev . every 2 ((26/8) <~)) $ spread' (striate' 8) (((+0.04) . (*0.04)) <$> slow 4 sinewave1) $ sound "breaks157"

# 7

d1 $ slow 2$spread' striate "[4 2 3 8]/3" $ whenmod 4 2 (jux (rev)) $ sound "[[bd mt*3 bd [sn*8 bd] [lt*4 bd] [~ sn*4] ht/5*6 ht*2]]"

# 7.1

d1 $ slow 2 $ spread' striate "[4 2 8 1]/3" $ jux palindrome $ sound "[jvbass*4 jvbass/5*8 ~ jvbass/9*6, drum*2 sn/2 drum/2*6 rave/3]"

# 8

d1 $ slow 8 $ every 4 (rev) $ jux (|+| speed "[2,3]") $ spread' striate "[4 3 2, 6]" $ sound (samples "stab*4 sn" $ run 8)

# 9

d1 $ every 2 (density 2) $ jux (spread' (striate) "[1 16 4 8]/3") $ sound (samples "[drum bd*12]" "[1 2 3 0]") |+| speed "[2 1.5 1]/4"

# 10

d1 $ density 2 $ jux (iter 32) $ sound "bass3/2 bass3/0" |+| (speed $ every 2 rev  $ "[8 3 4]/3")

# 11

d1 $ superimpose ((|+|vowel"a").iter 4)$jux rev$sound (samples "[amencutup*8 bass3*2,[jvbass*8]/3]" $ slow (3/5)$run 12)

# 12

d1 $ (jux (spread' (<~) (toRational <$> (slow 16 sinewave1))) $ sound "bd*2 pluck/2 sn/2 [pluck/0 pluck/1]") |+| speed "1 2 3 2"

# 12.1

d1 $ (jux (spread' (<~) (toRational <$> (slow 2 sinewave1))) $ striate 2 $ sound (samples "odx*2" (slow 3 $ run 4)))

# 13

let sinerat1 = fmap toRational sinewave1 in stack [smash 4 [1..16] $ (jux (spread' (<~) (slow 64 $ sinerat1)) $ sound $ samples "[bd bd*4, jvbass*8]" (slow 4 $ run 8)), sound "future/1"]

# 14

d1 $ jux (spread' (density) ((*4) . (1-) <$> (slow 8 $ rattri1))) $ sound "bd drum*2 drum/2 [bass3/2,bd]" |+| speed (slow 8 $ (+1) <$> tri1)

# 15

d1 $ (spread' (striate' 4) ((+0.2) <$> slow 8 sine1)) $ jux rev $ sound (samples "[latibro*6,bd]/2" "0 7 4") |+| speed "[1 2 1.5]/4"

# 16

d1 $ slow 2$weave 16(pan sine1)$map sound["[[odx*4[odx*2odx*8],[hh*4,~odx/12]*4],[blue/1]/2~~[~odx/13*2]]",(1/16)~>samples"jvbass*16""2 2[3 4]1"]


# 17

d1 $ sound (samples "{casio ~ bd*3, bd*2 rm*3, numbers lt [mt sn, lt*3 voodoo] sn bass3*2}" ("{7 2, 3 1 5}")) |+| end rand
