cps 0.5


d4 $ jux ((|+| speed "0.25") . (|+| vowel "[a q o x ]/4") . slow 2) . slowspread (slow) [2, 4, 8] . slowspread (density) [1, 1.25, 2] . rcbb "1.8" "0.8" "[0.2 0.5 0.3 0.25]/5" "0.8" . striate' 512 (1/100) $ sound "sine sine2:1 sine"
|+| cut "1"

|+| speed (every 2 ((*4) <$>) $ "[0.36 0.25 0.45 0.37]/4")
|+| speed (((*2) <$>) $ "[0.36 0.25 0.45 0.37]/4")
|+| coarse "4"
|+| gain "0.8"

hush

cps 0.5

d4 $ juxBy 0 ((|+| speed "[-1 0]/4") . every 8 (|+| vowel "o") . (|+| gain "0.8")) . slow 32 . slowspread (slow) [1.25, 4] $ striate' 128 (0.5) $ sound "ursu"
|+| cut "1"
|+| pan "[0 0.5 0.75]/3"
|+| speed (((*2) <$>) $ scale 0.23 0.6 $ sine1)
|+| begin "0.4"
|+| end "0.6"
|+| gain "0.8"

d4 $ slow 32 . slowspread (slow) [1.25, 4] $ sound "ursu"
|+| cut "1"
|+| pan "[0 0.5 0.75]/3"
|+| begin "0.4"
|+| end "0.6"
|+| gain "0.666"



----


cps 0.666

let lpf c r = (|+| cutoff c) . (|+| resonance r)

d5 $ palindrome . foldEvery [4, 6, 7] (slow 2) $ stack[
palindrome . every 2 (chop 4) . gap 2 $ sound "[peri:3 ~ [amencutup:4 !] peri:2]"
,
juxBy 0 (jux rev) . within (0, 0.25) (gap 2 . slow 2) . whenmod 16 4 (stut 4 0.5 0.5) $ sound "[bd8:1 ~ ~, sn:4 unix:1?]"
,
jux rev $ sound "ch ! ! ! ! ! ! !"
]
|+| coarse "7"

d3 $ juxBy 0 ( (jux rev) . foldEvery [5, 3, 8] (|+| vowel "a") ) . lpf "0.05" "0.9" $ slow 8 $ striate 64 $ sound "hidden"
|+| speed "[0.5 0.666 0.7 0.6]/4"
|+| coarse "[3 2 4 1 5 4]/6"


d8 $ juxBy 0 (lpf "0.05" "0.5") . whenmod 20 5 (within (0, 0.25) (slow 2) . within (0.25, 0.3) (|+| accelerate "-1") . within (0, 0.15) (|+| speed "0.5")) $ stut 2 0.25 0.5 . every 5 (|+| cut "1") . juxBy 0 ((|+| coarse "[2 7 6]/3")) $ append (sound "[unix:0 unix:4] ~") (sound "bd:4 ch ae:7")
|+| speed "0.8"


----

cps 0.25


d8 $ retrig $ striate' 4 (0.5) $ juxBy 0 (lpf "0.05" "0.5") . whenmod 20 5 (within (0.25, 0.3) (|+| accelerate "-1") . within (0, 0.15) (|+| speed "0.5")) $ seqP[
(0, 4, sound "[unix:0 bd:4] [unix:4 ch] [visco:5 ae:2]")
,
(4, 8, sound "[unix:0 bd:4] [unix:4 db] [visco:5 ae:2]")
,
(8, 12, juxBy 0 ((|+| coarse "[2 7 6]/3")) $ sound "[unix:0 bd:4] [unix:4 ch] [visco:5 bd8]")
,
(12, 16, append (sound "bd8:1 unix:4 ~") (sound "bd:4 ch"))
,
(0, 16, sound "cp cp cp" |+| end "0.1" |+| cut "1")
]
|+| speed "0.8"



hush
-----------



d8 $ striate' 4 (0.5) $ juxBy 0 (lpf "0.05" "0.5") . whenmod 20 5 (within (0.25, 0.3) (|+| accelerate "-1") . within (0, 0.15) (|+| speed "0.5")) $ stack[
cat[
sound "[unix:0 bd:4] [unix:4 ch] [visco:5 ae:2]"
,
sound "[unix:0 bd:4] [unix:4 db] [visco:5 ae:2]"
]
,
cat[
juxBy 0 ((|+| coarse "[2 7 6]/3")) $ sound "[unix:0 bd:4] [unix:4 ch] [visco:5 bd8]"
,
append (sound "bd8:1 unix:4 ~") (sound "bd:4 ch")
]
]
|+| speed "0.8"






d8 $ juxBy 0 (lpf "0.05" "0.5") . whenmod 20 5 (within (0.25, 0.3) (|+| accelerate "-1") . within (0, 0.15) (|+| speed "0.5")) $ stack[
cat[
append (sound "unix:0 unix:4 ~") (sound "bd:4 ch ae:7")
,
juxBy 0 ((|+| coarse "[2 7 6]/3")) $ append (sound "unix:0 unix:4 ~") (sound "bd:4 ch ae:7")
]
,
jux rev $ sound "visco:5 ! !"
]
|+| speed "0.8"

|+| speed ("[0.5 0.666 0.7 0.6]/4")




hush


cps 1

cps 0.5

d1 $ stack[
every 16 (rev) $ stut 2 0.5 0.5 . echo (2/3) . slowspread (density) [2, 4, 3] . gap 2 $ (sound $ samples "jvbass?" $ iter 8 $ run 8)
|+| coarse "7"
|+| speed (every 4 ((0.1-) <$>) "1")
|+| speed (slow 0.5 $ scale 0.9 1.2 $ sine1)
,
stut 2 0.5 0.5 $ weave 4 (speed $ scale 1 1.5 $ squarewave1) [gap 2 $ palindrome . density 2 $ sound "[bd:4 ! !, bd:2 !]"]
|+| vowel "[o a]/2"
|+| accelerate "[-1 0 0.5 1]/4"
]

hush

cps 0.5

d1 $ striate' 32 (0.8) $ every 16 (rev) $ stut 2 0.5 0.5 . echo (2/3) . slowspread (density) [2, 4, 3] . gap 2 $ (sound $ samples "jvbass" $ iter 8 $ run 8)
|+| speed (every 4 ((0.1-) <$>) $ slow 0.5 $ scale 0.9 1.2 $ sine1)
|+| resonance "0.9"
|+| cutoff "0.02"

|+| bandq "0.8"
|+| bandf "0.2"

hush


---

--d3 $ density 1.25 . slowspread (slow) [1.25, 2, 2.5] . gap 2 $ stack[

cps 0.666

d3 $ foldEvery [4, 5, 6, 7] (slow 2) . gap 2 $ stack[
every 16 (rev) $ stut 2 0.5 0.5 . echo (2/3) . slowspread (density) [2, 4, 3] . gap 2 $ (sound $ samples "jvbass" $ iter 8 $ run 8)
|+| speed (scale 0.9 1.2 $ sine1)
,
juxBy 0 ( |+| coarse "23" ) . foldEvery [3, 5, 7] (stut 2 0.25 0.25) . echo (2/2) . slowspread ($) [density 2, density 2, density 2, gap 2 . density 4] . every 4 (gap 2) $ sound "[bd:4 ! !?, sd8:2 sn?]"
|+| speed "0.5"
]
|+| resonance "0.8"
|+| cutoff "0.2"
|+| bandq "0.8"
|+| bandf "0.2"

----


d3 $ slow 2 . gap 2 $ stack[
every 16 (rev) $ stut 2 0.5 0.5 . echo (2/3) . slowspread (density) [2, 4, 3] . gap 2 $ (sound $ samples "jvbass?" $ iter 8 $ run 8)
|+| speed (scale 0.9 1.2 $ sine1)
,
juxBy 0 ( |+| coarse "23" ) . stut 2 0.5 0.25 . echo (2/2) . slowspread (density) [2, 2, 2, 4] . gap 2 $ sound "[bd:4 ! !, sn]"
|+| speed "0.666"
]
|+| resonance "0.8"
|+| cutoff "0.2"
|+| bandq "0.8"
|+| bandf "0.2"

hush

d4 $ stack[
density 2 $ sound "kawaixd:10 kawaixd:4*2?"
,
slow 2 . juxBy 0 ( |+| coarse "23" ) . stut 2 0.5 0.25 . echo (2/2) . slowspread (density) [2, 2, 2, 4] . gap 2 $ sound "[bd:4 ! !, sn]"
|+| speed "0.666"
]
|+| resonance "0.8"
|+| cutoff "0.2"
|+| bandq "0.8"
|+| bandf "0.2"

--

d4 $ stack[
rev . density 2 $ sound "[kawaixd:10 kawaixd:4, kawaixd:5 kawaixd:4*2?]"
,
gap 2 $ sound "[bd:4 ~ ~, sn sn]"
]
|+| resonance "0.8"
|+| cutoff "0.2"
|+| bandq "0.8"
|+| bandf "0.2"


d4 $ stack[
every 4 (within (0, 0.5) (slow 2 . chop 2)) . foldEvery [3, 5, 7] (striate 2) . palindrome . density 2 $ sound "[amencutup amencutup:2 [amencutup:6 ! !? !?], amencutup:3 amencutup]"
]
|+| resonance "0.8"
|+| cutoff "0.2"
|+| bandq "0.8"
|+| bandf "0.2"


let rcbb = (|+| resonance "0.8") . (|+| cutoff "0.2") . (|+| bandq "0.8") . (|+| bandf "0.2")
let cgs x = (chop x) . (gap x) . (striate x)

d4 $ every 2 rcbb . (0.15 <~) . juxBy 0 (within (0, 0.5) (js)) . t 4 . stut 2 0.5 0.5 . palindrome $ sound "[amencutup:2 amencutup [amencutup:2 amencutup:6], amencutup:2 amencutup]"
|+| coarse "[6 11]/2"
|+| cut "1"

hush

cps 0.5

d4 $ every 4 (juxBy 0 (slow 2 . cgs 2)) . stut 2 0.25 0.5 $ append (sound "[amencutup:2 amencutup:6 amencutup:6]") (sound "amencutup amencutup:3 [amencutup:7 ! !] !")
|+| coarse "[3 4]/2"
|+| speed (every 23 ((0.1-) <$>) $ slow 0.15 $ scale 0.9 1.2 $ sine1)
|+| vowel "x q x q [o a i e]/4"


---

hush

d1 $ slow 8 . stut 8 0.2 (-0.1) $ stack[
juxBy 0 (slow 2 . (|+| speed "-5") . (|+| gain "[0 1]/2") . (|+| coarse "6")) . stut 2 0.5 0.5 . echo (2/3) . gap 2 $ append (sound "[amenkit:5 amenkit:4 [amenkit:1 !? !? !?]]") (sound "amenkit:3 amenkit:5? amenkit:3")
|+| speed (every 2 ((/0.9) <$>) $ "[1.1 1 1.23 1.3 1.25 1.17]/6")
,
jux rev $ every 2 (slowspread (density) [2, 1, 4]) $ sound "am:2*2 ! !"
]


d8 $ stut 2 0.5 0.5 . spread' striate "16 4 8" $ sound "gentle:2"
|+| cut "1"
|+| end rand
|+| speed (((0.1-) <$>) $ scale 0.4 0.5 $ sine1)


cps 0.5

d7 $ juxBy 0 (every 2 (jux rcbb) . (|+| coarse "[2 4 6]/3")) . slow 1.25 . spread' striate "16 4 8" $ sound "thib:2"
|+| cut "1"
|+| speed (((0.1-) <$>) $ scale 0.4 0.5 $ sine1)

cps 0.666

d8 $ slow 2 . every 5 (|+| cut "1") . juxBy 0 ((|+| coarse "[2 7 6]/3")) . stut 2 0.5 0.5 $ append (sound $ samples "syll sylloh:0 [syllbr:0 sylltch:4]" $ iter 2 $ run 2) (sound "bd:4 ch ae:7")
|+| crush "9"


|+| speed (((0.1-) <$>) $ scale 0.4 0.5 $ sine1)

|+| vowel "[x e y i r a]/5"


hush


hush



d8 $ every 4 rev . every 2 (striate 2) . gap 2 . slow 2 . every 5 (|+| cut "1") . juxBy 0 ((|+| coarse "[2 7 6]/3")) . stut 2 0.5 0.5 $ append (sound $ samples "unix unix:4 [unix:2 !]" $ iter 2 $ run 2) (sound "bd:4 ch ae:7")
|+| crush "9"
