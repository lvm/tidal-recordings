cps 1

let wf0 n = within(0, n)
    sw f = sometimes(wf0 0.5 f)
    sw' d h f = sometimes(within (d, h) f)
    notem p = note $ toMIDI p
    nm p = notem p
    ra n = revArc(0, n)
    sra n = sometimes(revArc(0, n))
    swra n = sw(revArc(0, n))
    st2' d = stut 2 0 d
    st2 = st2' 0.25
    ch :: Int -> [Int] -> Pattern Int ; ch n chord = listToPat [ch + n | ch <- chord]
    -- cho :: Pattern -> Int -> [Int] -> Pattern Int;
    -- q $ note (cho 60 "1 1 1" [0, 3, 7])
    cho n pat chord = preplace(1,1) pat $ listToPat [ch + n | ch <- chord]
    cho' n off pat chord = cho (n+off) pat chord
    slowcho nlist pat chord = slowcat[note (cho n pat chord) | n <- nlist] --preplace(1,1) pat $ listToPat [ch + n | ch <- chord]
    slowcho' nlist off pat chord = slowcat[note (cho' n off pat chord) | n <- nlist] --preplace(1,1) pat $ listToPat [ch + n | ch <- chord]
    n48 sc = note $ ch 48 sc
    n n off sc = note $ ch (n+off) sc
    nn off sc = n 48 off sc
    --  m1 $ slowcat[note (skp 60 "1 1 1" (rotate i [0,3,7,10])) | i <- [0..3]]
    rotate :: Int -> [a] -> [a]
    rotate _ [] = []
    rotate n xs = zipWith const (drop n (cycle xs)) xs
    -- chords
    minor = [0,3,7]
    major = [0,4,7]
    nine = [0,4,7,10,14]
    ninesus4 = [0,5,7,10,14]
    add9 = [0,4,7,14]
    madd9 = [0,3,7,14]
    maj9 = [0,4,7,11,14]
    m9 = [0,3,7,10,14]
    sus2 = [0,2,7]
    sus4 = [0,5,7]
    seven = [0,4,7,10]
    m7 = [0,3,7,10]
    eleven = [0,4,7,10,14,17]
    m11 = [0,3,7,10,14,17]
    thirteen = [0,4,7,10,14,21]
    m13 = [0,3,7,10,14,21]


cps 1

b $ stack[
--drum "[bd/3 bd bd/4 ~] [~ bd ~ ~]",
drum "[bd bd bd/4 ~] [~ bd ~ ~]",
whenmod 16 8 (slowspread (stut 2 0) [0.5, 0.5, 0.75]) $ drum "[~ ~ ~ ~] [~ cp ~ ~]",
drum "[ch(3,4)] [ch(3,4)]",
drum "[~ ~ ~ oh] [~ ~ ~ oh]"
--,slowcat[drum "[~ ~ ag ~] [~ ag ~ [ag !?]]", drum "[ag(5,8)]/2"]
] # dch "0.1" # stt "0" # std "0" # sag "0.75"

q $ sw (# cutoffegint (scale 0.5 0.75 sine1)) $ every 7 (iter 2) . chop 2 $ stack[
 slowcho [36,32,37] "[1 !] 1 1 1" [0, 3, 0, 3]
]  # dur "0.1 0.05 0.25 0.05" # cutoffegint (scale 0.25 0.5 sine1) # decay "1"

---

hush


b $ stack[
stut 2 0 0.75 $ drum "bd ~",
stut 2 0 0.75 $ append' (drum "[cr sn] [~ bd]") (slowcat[drum "[~ bd] [sn, oh]",drum "[~ ~] [sn oh]"]),
slowcat[drum "cp [oh cp]",drum "cp [[ch oh] ag]",drum "cp [[ch oh] cl*2]",drum "cp [oh cl*2]"],
drum "{[~ ch] ch*2}%4"
] # dch "0.1" # stt "0" # std "0" # sag "0.75" # scl "0.75" # scr "1"


q $ every 2 (sw' 0.5 1 (# decay "0.5")) $ palindrome $ slowcat[
chrot [48] "1 [~ 1] 1 1" [0, 3, 7, 5],
chrot [48] "[~ 1] ~ 1 1" [5, 3, 10, 7]
--,note (cho 48 "1 [~ 1] 1 1 " [5, 3, 10, 7])
--,note (cho 48 "[~ 1] ~ 1 1 " [3, 10, 14, 7])
]# dur "0.2" # decay "1" # lfoint "0.05" # lforate "0.8"


q $ every 2 (sw' 0.5 1 (# decay "0.5")) $ palindrome $ slowcat[
note (cho 48 "1 [~ 1] 1 1 " [0, 3, 7, 5])
,note (cho 48 "1 [~ 1] 1 1 " [5, 3, 10, 7])
--,note (cho 48 "[~ 1] ~ 1 1 " [3, 10, 14, 7])
]# dur "0.2" # decay "1" # lfoint "0.05" # lforate "0.8"

q $ iter 4 . (density 2) . sometimes(# decay (scale 0.9 1 sine1)) $ palindrome $ slowcat[
note (cho 48 "1 1 1 1 " [0, 3, 7, 5])
,note (cho 48 "1 1 1 1 " [5, 3, 10, 7])
--,note (cho 48 "[~ 1] ~ 1 1 " [3, 10, 14, 7])
] # dur "[0.05 0.1]/2" # lfoint "0.05" # lforate "0.8" # decay (scale 0.7 0.9 $ density 2 $ sine1) --"0"






-- q $ every 2 (sw' 0.5 1 (# decay "0.1")) $ palindrome $ slowcat[
-- note (cho 48 "[~ 1] ~ 1 1 " [0, 3, 7, 5])
-- ,note (cho 48 "[~ 1] ~ 1 1 " [5, 3, 10, 7])
-- --,note (cho 48 "[~ 1] ~ 1 1 " [3, 10, 14, 7])
-- ]# dur "0.2" # decay "1" # lfoint "0.05" # lforate "0.8"


q $ sw (# cutoffegint (scale 0.5 0.75 sine1)) $ every 7 (iter 2) $ chop 8 $ stack[
 slowcho [47, 45, 42] "[1 !] 1 1 1" [0, 3, 0, 3]
]  # dur "0.1 0.05 0.25 0.05" # cutoffegint (scale 0.25 0.5 sine1) # decay "0"

hush


----


b $ stack[
slowcat[drum "~ ~ ~ bd",drum "~ bd bd [~ bd]"],
whenmod 16 8 (slowspread (stut 2 0) [0.75, 0.5]) $ drum "~ ~ ~ cp",
density 2 $ drum "ch*4",
drum "~ ~ ~ oh",
--drum "[ag(5,8)]/2",
every 8 (# drum "cr cr cr cr") $ slowcat[drum "[~ ~ ag ~] [~ ag ~ ag]", drum "[ag(5,8)]/2"]
] # dch "0.25 0.5 0.75" # lbd "0.65" # lch "0.5" # sag "0.5"  # stt "0" # std "0"

q $ stack[
  chrot' [48] 0 "1(8,8)"  [0, 5, 0, 3, 5, 0, 3, 7, 0, 3, 7, 10, 5],
  slowcat[
  iter 4 $ slowcho' [60,72] 0 "1(3,8)"  [0, 5, 0, 3, 5, 0, 3, 7, 0, 3, 7, 10, 5],
  iter 4 $ chrot' [60,72] 0 "1(3,8)"  [0, 5, 0, 3, 5, 0, 3, 7, 0, 3, 7, 10, 5]
  ]
] # dur "0.05" # decay "1"

m5 $ stack[
--  chrot' [48] 0 "1 !"  [0, 5, 0, 3, 5, 0, 3, 7, 0, 3, 7, 10, 5]
  note $ fit 13 (words "48 53 48 51 53 48 51 55 48 51 55 58 53") "0 ~ ~ 1 2 ~ 3 ~ 4 ~ 5 ~ ~ 6 7 ~ 8" -- "0 ~ 1 ~ 2 3 ~ 4 ~ 5 ~ 6 ~ 7 8 ~"
] # dur "0.5"

hush

q $ every 2 (iter 2) . sw(chop 2) . sw' 0.5 0.75 (striate 2) . striate 2 . density 2 $ slowcat[
  chrot' [48] 0 "1"  [0, 5, 0, 3, 5, 0, 3, 7, 0, 3, 7, 10, 5]
] # dur "0.05" # decay "1"
