
cps 1

let wf0 n = within(0, n)
    sw f = sometimes(wf0 0.5 f)
    sw' d h f = sometimes(within (d, h) f)
    notem p = note $ toMIDI p
    nm p = notem p
    ra n = revArc(0, n)
    sra n = sometimes(revArc(0, n))
    swra n = sw(revArc(0, n))
    st2' d = stut 2 0 d
    st2 = st2' 0.25
    ch :: Int -> [Int] -> Pattern Int ; ch n chord = listToPat [ch + n | ch <- chord]
    -- cho :: Pattern -> Int -> [Int] -> Pattern Int;
    -- q $ note (cho 60 "1 1 1" [0, 3, 7])
    cho n pat chord = preplace(1,1) pat $ listToPat [ch + n | ch <- chord]
    cho' n off pat chord = cho (n+off) pat chord
    slowcho nlist pat chord = slowcat[note (cho n pat chord) | n <- nlist] --preplace(1,1) pat $ listToPat [ch + n | ch <- chord]
    slowcho' nlist off pat chord = slowcat[note (cho' n off pat chord) | n <- nlist] --preplace(1,1) pat $ listToPat [ch + n | ch <- chord]
    n48 sc = note $ ch 48 sc
    n n off sc = note $ ch (n+off) sc
    nn off sc = n 48 off sc
    --  m1 $ slowcat[note (skp 60 "1 1 1" (rotate i [0,3,7,10])) | i <- [0..3]]
    rotate :: Int -> [a] -> [a]
    rotate _ [] = []
    rotate n xs = zipWith const (drop n (cycle xs)) xs
    -- chords
    minor = [0,3,7]
    major = [0,4,7]
    nine = [0,4,7,10,14]
    ninesus4 = [0,5,7,10,14]
    add9 = [0,4,7,14]
    madd9 = [0,3,7,14]
    maj9 = [0,4,7,11,14]
    m9 = [0,3,7,10,14]
    sus2 = [0,2,7]
    sus4 = [0,5,7]
    seven = [0,4,7,10]
    m7 = [0,3,7,10]
    eleven = [0,4,7,10,14,17]
    m11 = [0,3,7,10,14,17]
    thirteen = [0,4,7,10,14,21]
    m13 = [0,3,7,10,14,21]


cps 1

q $ smash 2 [2] $ randcat[
  every 2 (# note (cho 48 "1 1 1 1" [0, 2, 0, 3])) $ note (cho 48 "1 1 1 1" [0, 3, 0, 3]) # dur "0.1 0.05 0.15 0.05"
,
  every 2 (# note "36 41 43 36") $ note "48 36 51 48" # dur "0.05" # decay "1"
]

q $ every 3 (sometimes(within(0,1) (# note (cho 60 "1 1 1 1" [12,6,0,12]) )) . (# dur "0.05")) $ every 2 (# note "[36 !] 41 [43 !!?] 36") $ note "[48 !?] 36 [51 !?] 48" # dur "0.25" # decay "1"

b $ foldEvery [3,5,7] (# stt (scale 0 1 rand)) . every 16 ((# scr "1") . (#sag "1")) $ every 8 (slow 2 . chop 4) $ stack[
drum "[bd/4 ~ bd ~] [~ ~ ~ bd]",
drum "[~ ch oh ~] [ch ch ~ oh]",
every 4 (chop 4 . spin 2) $ drum "[cr ~ ~ cr] [~ ~ ~ ~]",
randcat[drum "[cl(8, 8)]", sometimes (degrade) $ drum "[ag(5, 8)]"]
] # stt (scale 0 0.1 sine1) # std "0.1" # lbd "0.5" # dch "0.1" # hg "0.1" # scr (every 2 ((+(-0.25)) <$>) $ "0.75") # sag "0.75"


---

cps 1

b $ stack[
every 8 (# drum "bd(5,8)") $ drum "bd!",
sometimes (slowspread (stut 2 0) [0.5,0.75]) $ drum "~ cp",
stack[
every 3 (chop 2) . density 2 $ drum "[ch!] oh",
every 3 (# drum "~ ~") $ density 2 $ drum "[~ ch] !"
],
every 2 (sw(chop 2)) $ drum "[sn(5,8)]/2",
drum "cr/8 ~"
] # stt "0" # std "0" # scr "0.75"

q $ striate 32 . sw(slow 4 . chop 4) . density 2 $ stack[
every 2 (palindrome . (# note "[[72!] !] [36!]")) $ randcat[note "36! 48!",note "[36!] [38!]"]
] # decay "1" # cutoffegint (scale 0 1 $ rand)  # dur (scale 0.05 0.25 $ slow 4 $ triwave1)


b $ stack[
drum "bd!",
drum "~ cp",
stack[
every 3 (chop 2) . density 2 $ drum "[ch!] oh",
every 3 (# drum "~ ~") $ density 2 $ drum "[~ ch] !"
],
drum "cr/8 ~"
] # stt "0" # std "0" # scr "0.75"


cps 1.2

hush


---

cps 0.666

b $ every 7 (chop 2) $ stack[
slowcat[drum "~ bd [~ bd] ~",drum "bd ~ bd ~"],
drum "[~ cp] ~ ~ ~",
density 2 $ stack[
drum "[ch!] oh",
drum "[~ ch] !"
],
every 9 (chop 2) $ drum "cl(5,8)"
] # dch "0.1" # hg "0.75" # scl "0.01"

q $ foldEvery [3,5, 7] (sw' 0 0.33(#dur "0.5")) . every 2 (sw(sw rev . (# note (cho 32 "[1 1 [1!] 1]" [3, 5, 7, 3])))) . sw(chop 2) $ stack[
note (cho 36 "[1 1 [1!] 1]" [21, 15, 14, 17])
] # dur "0.05" # decay "1"


q $ foldEvery [3,5, 7] (sw' 0 0.33(#dur "0.5")) . every 2 (sw(sw rev . (# note (cho 32 "[1 1 [1!] 1]" [3, 5, 7, 3])))) . sw(chop 2) $ stack[
note (cho 36 "[1 1 [1!] 1]" [21, 15, 14, 17])
] # dur "0.05" # decay "1"

---

cps 0.666

q $ sw(# pitch1 "1") . density 2 . chop 2 . foldEvery [3,5, 7] (sw' 0 0.33(#dur "0.5")) . every 23 (sw(sw rev . (# note (cho 32 "[1 1 [1!] 1]" [3, 5, 7, 3])))) . sw(chop 2) $ stack[
note (cho 36 "[1 1 [1!] 1]" [21, 15, 14, 17])
] # dur "0.05" # decay (scale 0.1 1 rand) # pitch1 "0.5"


b $ density 2 $ stack[
drum "bd [bd,sn]",
sw (chop 2) $ foldEvery [3,5,7](slowspread (stut 2 0) [0.5, 0.5, 0.75]) $ drum "~ cp",
every 9 (wf0 0.5 (chop 2)) . density 2 $ stack[drum "ch oh", drum "[~ ch] !"]
] # dch "0.1"

---

q $ slowcho [36, 38, 32, 48, 48, 51, 60, 48, 38, 36, 32] "[[1 !] [1 !!?] [1 1] [1 !]] [[1 !] [1 !] [1 1] [1 !]]" [0, 3, 5, 7, 10, 14, 21] # dur "1" # decay "0.1" # attack (scale 0 0.1 sine1)


----
cps 1

cps 0.666

b $ every 7 (sw(# std "1")) . sw(# std "0.1") $ stack[
--density 1.2 . foldEvery [7,8,9] (# drum "[~ ch ~ ch ] [ch ch ~ ch]") $ drum "~ ~",
slowcat[drum "[ch ch ch oh ] [ch ch oh ch]", palindrome $ drum "[[ch, ~ oh] [cr, ag*2] oh [oh, ag ch]]"],
--palindrome $ drum "[[ch, ~ oh] [cr, ag*2] oh [oh, ag ch]]",
slowcat[drum "bd [~ bd] ~ bd",drum "~ [~ bd] ~ bd"],
slowcat[drum "[~ sn ~ [sn!?]]", drum "[~ sn ~ [sn!?]]", drum "sn(5,8)"]
] # stt "0" # std "0" # doh "0.1" # hg "0.75" # scl "0.01" # scr "1" # sag "1"

q $ slowcat[
note $ cho 36 "[1 ~ 1 ~] [1 1  ~ 1]" [0, 3, 3, 0],
note $ cho 32 "[1 ~ 1 ~] [1 1  ~ 1]" [0, 3, 0, 2]
] # dur "0.25" # decay "1" # cutoffegint "0" # vel (scale 0.25 0.75 sine1)


hush

---

cps 1

b $ every 13 (sw' 0 0.33 (# std "1")) $ sw((#stt (scale 0 0.15 sine1)) . (# std "0.15")) $ stack[
slowcat[drum "[~ bd] [~ bd] ~ bd",drum "~ [~ bd] ~ bd"],
foldEvery [9,15,21] (slowspread (stut 2 0) [0.5, 0.5, 0.75]) $ drum "[~ ~ ~ ~] [~ cp ~ ~]",
every 3 (sw' 0 0.33( stut 2 0 0.75 ) ) $ drum "[sn([3 5]/2,8)]",
density 2 $ stack[whenmod 16 4 (sometimes (chop 2)) $ drum "ch*2 oh", append' (drum "~ ~") (drum "[~ ch] !")]
] # stt "0" # std "0" # doh "0.1" # hg "0.75" # scl "0.01" # scr "1" # sag "1"

q $ every 2 (sw' 0.5 1 (# decay "0.1")) $ slow 1.2 $ palindrome $ slowcat[
note (cho 48 "[~ 1] ~ [1 1] 1 " [0, 3, 7, 5]),
note (cho 48 "[~ 1] ~ [1 1] 1 " [5, 3, 7, 10])
]# dur "0.05" # decay "1" # lfoint "0.05" # lforate "0.8"


